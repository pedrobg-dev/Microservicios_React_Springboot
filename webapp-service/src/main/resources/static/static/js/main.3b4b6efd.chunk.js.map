{"version":3,"sources":["../node_modules/@ionic/react/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","images/logo.jpg","components/Menu.tsx","components/ExploreContainer.tsx","pages/Page.tsx","pages/customer/customerApi.ts","pages/customer/CustomerList.tsx","pages/customer/CustomerEdit.tsx","pages/employee/EmployeeApi.ts","pages/employee/EmployeeList.tsx","pages/employee/EmployeeEdit.tsx","pages/supplier/SupplierApi.ts","pages/supplier/SupplierList.tsx","pages/supplier/SupplierEdit.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","appPages","title","url","iosIcon","peopleOutline","mdIcon","people","Menu","location","useLocation","contentId","type","src","LogoImg","appPage","index","autoHide","className","pathname","routerLink","routerDirection","lines","detail","slot","ios","md","ExploreContainer","name","target","rel","href","Page","useParams","fullscreen","collapse","size","searchCustomers","a","process","fetch","response","json","removeCustomer","saveCustomer","customer","JSON","stringify","searchCustomerById","CustomerList","useState","clientes","setClientes","history","useHistory","useEffect","search","datosDeEjemplo","remove","onClick","push","color","fill","icon","add","cliente","firstName","lastName","email","phone","address","String","pencil","close","CustomerEdit","setCustomer","routeMatch","useRouteMatch","params","result","save","position","onIonChange","value","checkmark","searchEmployees","removeEmployee","saveEmployee","employee","searchEmployeeById","EmployeeList","empleados","setEmpleados","empleado","EmployeeEdit","setEmployee","salary","Number","searchSuppliers","removeSupplier","saveSupplier","supplier","searchSupplierById","SupplierList","proveedores","setProveedores","proveedor","web","SupplierEdit","setSupplier","contact","setupIonicReact","App","path","exact","to","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b4b6efd.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 53;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 54;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t82,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 55;\nmodule.exports = webpackAsyncContext;","export default __webpack_public_path__ + \"static/media/logo.541d369e.jpg\";","import {\n  IonContent,\n  IonIcon,\n  IonImg,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonListHeader,\n  IonMenu,\n  IonMenuToggle,\n  IonNote,\n} from '@ionic/react';\n\nimport { useLocation } from 'react-router-dom';\nimport { archiveOutline, archiveSharp, bookmarkOutline, heartOutline, heartSharp, mailOutline, mailSharp, peopleOutline, people, paperPlaneOutline, paperPlaneSharp, trashOutline, trashSharp, warningOutline, warningSharp, personOutline } from 'ionicons/icons';\nimport './Menu.css';\nimport LogoImg from '../images/logo.jpg';\n\ninterface AppPage {\n  url: string;\n  iosIcon: string;\n  mdIcon: string;\n  title: string;\n}\n\nconst appPages: AppPage[] = [\n  {\n    title: 'Clientes',\n    url: '/page/customers',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  },\n  {\n    title: 'Empleados',\n    url: '/page/employees',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  },\n  {\n    title: 'Proveedores',\n    url: '/page/suppliers',\n    iosIcon: peopleOutline,\n    mdIcon: people\n  }\n];\n\nconst labels = ['Family', 'Friends', 'Notes', 'Work', 'Travel', 'Reminders'];\n\nconst Menu: React.FC = () => {\n  const location = useLocation();\n\n  return (\n    <IonMenu contentId=\"main\" type=\"overlay\">\n      <IonContent>\n        <IonList id=\"inbox-list\">\n          <IonListHeader>\n            <IonImg src={LogoImg}>\n\n            </IonImg>\n          </IonListHeader>\n\n          {appPages.map((appPage, index) => {\n            return (\n              <IonMenuToggle key={index} autoHide={false}>\n                <IonItem className={location.pathname === appPage.url ? 'selected' : ''} routerLink={appPage.url} routerDirection=\"none\" lines=\"none\" detail={false}>\n                  <IonIcon slot=\"start\" ios={appPage.iosIcon} md={appPage.mdIcon} />\n                  <IonLabel>{appPage.title}</IonLabel>\n                </IonItem>\n              </IonMenuToggle>\n            );\n          })}\n        </IonList>\n        \n      </IonContent>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","import './ExploreContainer.css';\n\ninterface ContainerProps {\n  name: string;\n}\n\nconst ExploreContainer: React.FC<ContainerProps> = ({ name }) => {\n  return (\n    <div className=\"container\">\n      <strong>{name}</strong>\n      <p>Explore <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ionicframework.com/docs/components\">UI Components</a></p>\n    </div>\n  );\n};\n\nexport default ExploreContainer;\n","import { IonButtons, IonContent, IonHeader, IonMenuButton, IonPage, IonTitle, IonToolbar } from '@ionic/react';\nimport { useParams } from 'react-router';\nimport ExploreContainer from '../components/ExploreContainer';\nimport './Page.css';\n\nconst Page: React.FC = () => {\n\n  const { name } = useParams<{ name: string; }>();\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonButtons slot=\"start\">\n            <IonMenuButton />\n          </IonButtons>\n          <IonTitle>{name}</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">{name}</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <ExploreContainer name={name} />\n      </IonContent>\n    </IonPage>\n  );\n};\n\nexport default Page;\n","import Customer from \"./Customer\";\r\n\r\nexport async function searchCustomers() {\r\n    let url = process.env.REACT_APP_API + 'customers';\r\n    let response = await fetch(url, {\r\n        'method': 'GET',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    return await response.json();    \r\n}\r\n\r\nexport async function removeCustomer(id: string) {\r\n    let url = process.env.REACT_APP_API + 'customers/' + id;\r\n    await fetch(url, {\r\n        'method': 'DELETE',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport async function saveCustomer(customer: Customer) {\r\n    let url = process.env.REACT_APP_API + 'customers';\r\n    let response = await fetch(url, {\r\n        'method': 'POST',\r\n        'body': JSON.stringify(customer),\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n}\r\n\r\nexport async function searchCustomerById(id: string) {\r\n    let url = process.env.REACT_APP_API + 'customers/' + id;\r\n    let response = await fetch(url, {\r\n        'method': 'GET',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    return await response.json();\r\n}","import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonItem, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { add, close, pencil } from 'ionicons/icons';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport './../Page.css';\r\nimport Customer from './Customer';\r\nimport { removeCustomer, saveCustomer, searchCustomers } from './customerApi';\r\n\r\nconst CustomerList: React.FC = () => {\r\n\r\n  const { name } = useParams<{ name: string; }>();\r\n  const [clientes, setClientes] = useState<Customer[]>([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname])\r\n\r\n  const search = async () => {\r\n    const datosDeEjemplo = await searchCustomers();\r\n    setClientes(datosDeEjemplo);\r\n  }\r\n\r\n  const remove = async (id: string) => {\r\n    await removeCustomer(id);\r\n    search();\r\n  }  \r\n\r\n  const addCustomer = () => {\r\n    history.push('/page/customer/new');\r\n  }\r\n\r\n  const editCustomer = (id: string) => {\r\n    history.push('/page/customer/' + id);\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonCard>\r\n          <IonTitle>Gestión de clientes</IonTitle>\r\n\r\n          <IonItem>\r\n            <IonButton onClick={addCustomer} color='primary' fill='solid' slot='end' size='default'>\r\n              Agregar Cliente\r\n              <IonIcon icon={add}></IonIcon>\r\n            </IonButton>\r\n          </IonItem>\r\n\r\n          <IonGrid className=\"table\">\r\n            <IonRow >\r\n              <IonCol>Nombre</IonCol>\r\n              <IonCol>Email</IonCol>\r\n              <IonCol>Télefono</IonCol>\r\n              <IonCol>Dirección</IonCol>\r\n              <IonCol>Acciones</IonCol>\r\n            </IonRow>\r\n            {clientes.map((cliente: Customer) =>\r\n              <IonRow>\r\n                <IonCol>{cliente.firstName} {cliente.lastName}</IonCol>\r\n                <IonCol>{cliente.email}</IonCol>\r\n                <IonCol>{cliente.phone}</IonCol>\r\n                <IonCol>{cliente.address}</IonCol>\r\n                <IonCol>\r\n                  <IonButton color='primary' fill='clear' onClick={() => editCustomer(String(cliente.id))}>\r\n                    <IonIcon icon={pencil} slot=\"icon-only\" />\r\n                  </IonButton>\r\n\r\n                  <IonButton color='danger' fill='clear' onClick={() => remove(String(cliente.id))}>\r\n                    <IonIcon icon={close} slot=\"icon-only\" />\r\n                  </IonButton>\r\n                </IonCol>\r\n              </IonRow>\r\n            )}\r\n\r\n          </IonGrid>\r\n        </IonCard>        \r\n\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default CustomerList;","import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { add, checkmark, close, pencil, text } from 'ionicons/icons';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\r\nimport './../Page.css';\r\nimport Customer from './Customer';\r\nimport { removeCustomer, saveCustomer, searchCustomerById, searchCustomers } from './customerApi';\r\n\r\nconst CustomerEdit: React.FC = () => {\r\n\r\n    const { name } = useParams<{ name: string;}>();\r\n    const [customer, setCustomer] = useState<Customer>({});\r\n    const history = useHistory();\r\n\r\n    const routeMatch: any = useRouteMatch(\"/page/customer/:id\");\r\n    const id = routeMatch?.params?.id;\r\n\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname])\r\n\r\n    const search = async () => {   \r\n        if(id === 'new'){\r\n            setCustomer({});\r\n        } else {\r\n            let result = await searchCustomerById(id);\r\n            setCustomer(result);\r\n        }\r\n    }\r\n\r\n    const save = async () => {        \r\n        await saveCustomer(customer);\r\n        history.push('/page/customers');\r\n    }\r\n\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{name}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonCard>\r\n                    <IonTitle>{id === 'new' ? 'Agregar Cliente' : 'Editar Cliente'}</IonTitle>\r\n\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Nombre</IonLabel>\r\n                                <IonInput onIonChange={e => customer.firstName = String(e.detail.value)} \r\n                                value={customer.firstName}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Apellido</IonLabel>\r\n                                <IonInput onIonChange={e => customer.lastName = String(e.detail.value)} \r\n                                value={customer.lastName}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                    </IonRow>\r\n\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Email</IonLabel>\r\n                                <IonInput onIonChange={e => customer.email = String(e.detail.value)} \r\n                                value={customer.email}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Dirección</IonLabel>\r\n                                <IonInput onIonChange={e => customer.address = String(e.detail.value)} \r\n                                value={customer.address}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>                        \r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Teléfono</IonLabel>\r\n                                <IonInput onIonChange={e => customer.phone = String(e.detail.value)} \r\n                                value={customer.phone}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n\r\n                    <IonItem>\r\n                        <IonButton onClick={save} color='success' fill='solid' slot='end' size='default'>\r\n                            <IonIcon icon={checkmark}>\r\n                            </IonIcon>\r\n                            Guardar\r\n                        </IonButton>\r\n                    </IonItem>\r\n\r\n                </IonCard>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default CustomerEdit;","import Employee from \"./Employee\";\r\n\r\nexport async function searchEmployees() {\r\n    let url = process.env.REACT_APP_API + 'employees';\r\n    let response = await fetch(url, {\r\n        'method': 'GET',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    return await response.json();    \r\n}\r\n\r\nexport async function removeEmployee(id: string) {\r\n    let url = process.env.REACT_APP_API + 'employees/' + id;\r\n    await fetch(url, {\r\n        'method': 'DELETE',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport async function saveEmployee(employee: Employee) {\r\n    let url = process.env.REACT_APP_API + 'employees';\r\n    let response = await fetch(url, {\r\n        'method': 'POST',\r\n        'body': JSON.stringify(employee),\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n}\r\n\r\nexport async function searchEmployeeById(id: string) {\r\n    let url = process.env.REACT_APP_API + 'employees/' + id;\r\n    let response = await fetch(url, {\r\n        'method': 'GET',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    return await response.json();\r\n}","import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonItem, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { add, close, pencil } from 'ionicons/icons';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport './../Page.css';\r\nimport Employee from './Employee';\r\nimport { removeEmployee, saveEmployee, searchEmployees } from './EmployeeApi';\r\n\r\nconst EmployeeList: React.FC = () => {\r\n\r\n  const { name } = useParams<{ name: string; }>();\r\n  const [empleados, setEmpleados] = useState<Employee[]>([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname])\r\n\r\n  const search = async () => {\r\n    const result = await searchEmployees();\r\n    setEmpleados(result);\r\n  }\r\n\r\n  const remove = async (id: string) => {\r\n    await removeEmployee(id);\r\n    search();\r\n  }\r\n\r\n  const addEmployee = () => {\r\n    history.push('/page/employee/new');\r\n  }\r\n\r\n  const editEmployee = (id: string) => {\r\n    history.push('/page/employee/' + id);\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonCard>\r\n          <IonTitle>Gestión de Empleados</IonTitle>\r\n\r\n          <IonItem>\r\n            <IonButton onClick={addEmployee} color='primary' fill='solid' slot='end' size='default'>\r\n              Agregar Empleado\r\n              <IonIcon icon={add}></IonIcon>\r\n            </IonButton>\r\n          </IonItem>\r\n\r\n          <IonGrid className=\"table\">\r\n            <IonRow >\r\n              <IonCol>Nombre</IonCol>\r\n              <IonCol>Email</IonCol>\r\n              <IonCol>Télefono</IonCol>\r\n              <IonCol>Dirección</IonCol>\r\n              <IonCol>Acciones</IonCol>\r\n            </IonRow>\r\n            {empleados.map((empleado: Employee) =>\r\n              <IonRow>\r\n                <IonCol>{empleado.firstName} {empleado.lastName}</IonCol>\r\n                <IonCol>{empleado.email}</IonCol>\r\n                <IonCol>{empleado.phone}</IonCol>\r\n                <IonCol>{empleado.address}</IonCol>\r\n                <IonCol>\r\n                  <IonButton color='primary' fill='clear' onClick={() => editEmployee(String(empleado.id))}>\r\n                    <IonIcon icon={pencil} slot=\"icon-only\" />\r\n                  </IonButton>\r\n\r\n                  <IonButton color='danger' fill='clear' onClick={() => remove(String(empleado.id))}>\r\n                    <IonIcon icon={close} slot=\"icon-only\" />\r\n                  </IonButton>\r\n                </IonCol>\r\n              </IonRow>\r\n            )}\r\n\r\n          </IonGrid>\r\n        </IonCard>        \r\n\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;","import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { add, checkmark, close, pencil, text } from 'ionicons/icons';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\r\nimport './../Page.css';\r\nimport Employee from './Employee';\r\nimport { removeEmployee, saveEmployee, searchEmployeeById, searchEmployees } from './EmployeeApi';\r\n\r\nconst EmployeeEdit: React.FC = () => {\r\n\r\n    const { name } = useParams<{ name: string;}>();\r\n\r\n    const [employee, setEmployee] = useState<Employee>({});\r\n    const history = useHistory();\r\n\r\n    const routeMatch: any = useRouteMatch(\"/page/employee/:id\");\r\n    const id = routeMatch?.params?.id;\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname])\r\n\r\n    const search = async () => {   \r\n        if(id === 'new'){\r\n            setEmployee({});\r\n        } else {\r\n            let result = await searchEmployeeById(id);\r\n            setEmployee(result);\r\n        }\r\n    }\r\n\r\n    const save = async () => {        \r\n        await saveEmployee(employee);\r\n        history.push('/page/employees');\r\n    }\r\n\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{name}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonCard>\r\n                    <IonTitle>{id === 'new' ? 'Agregar Empleado' : 'Editar Empleado'}</IonTitle>\r\n\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Nombre</IonLabel>\r\n                                <IonInput onIonChange={e => employee.firstName = String(e.detail.value)} \r\n                                value={employee.firstName}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Apellido</IonLabel>\r\n                                <IonInput onIonChange={e => employee.lastName = String(e.detail.value)} \r\n                                value={employee.lastName}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                    </IonRow>\r\n\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Email</IonLabel>\r\n                                <IonInput onIonChange={e => employee.email = String(e.detail.value)} \r\n                                value={employee.email}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Dirección</IonLabel>\r\n                                <IonInput onIonChange={e => employee.address = String(e.detail.value)} \r\n                                value={employee.address}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>                        \r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Teléfono</IonLabel>\r\n                                <IonInput onIonChange={e => employee.phone = String(e.detail.value)} \r\n                                value={employee.phone}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>                        \r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Salary</IonLabel>\r\n                                <IonInput onIonChange={e => employee.salary = Number(e.detail.value)} \r\n                                value={employee.salary}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n\r\n                    <IonItem>\r\n                        <IonButton onClick={save} color='success' fill='solid' slot='end' size='default'>\r\n                            <IonIcon icon={checkmark}>\r\n                            </IonIcon>\r\n                            Guardar\r\n                        </IonButton>\r\n                    </IonItem>\r\n\r\n                </IonCard>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default EmployeeEdit;","import Supplier from \"./Supplier\";\r\n\r\nexport async function searchSuppliers() {\r\n    let url = process.env.REACT_APP_API + 'suppliers';\r\n    let response = await fetch(url, {\r\n        'method': 'GET',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    return await response.json();    \r\n}\r\n\r\nexport async function removeSupplier(id: string) {\r\n    let url = process.env.REACT_APP_API + 'suppliers/' + id;\r\n    await fetch(url, {\r\n        'method': 'DELETE',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport async function saveSupplier(supplier: Supplier) {\r\n    let url = process.env.REACT_APP_API + 'suppliers';\r\n    let response = await fetch(url, {\r\n        'method': 'POST',\r\n        'body': JSON.stringify(supplier),\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n}\r\n\r\nexport async function searchSupplierById(id: string) {\r\n    let url = process.env.REACT_APP_API + 'suppliers/' + id;\r\n    let response = await fetch(url, {\r\n        'method': 'GET',\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n\r\n    return await response.json();\r\n}","import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonItem, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { add, close, pencil } from 'ionicons/icons';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport './../Page.css';\r\nimport Supplier from './Supplier';\r\nimport { removeSupplier, saveSupplier, searchSuppliers } from './SupplierApi';\r\n\r\nconst SupplierList: React.FC = () => {\r\n\r\n  const { name } = useParams<{ name: string; }>();\r\n  const [proveedores, setProveedores] = useState<Supplier[]>([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    search();\r\n  }, [history.location.pathname])\r\n\r\n  const search = async () => {\r\n    const datosDeEjemplo = await searchSuppliers();\r\n    setProveedores(datosDeEjemplo);\r\n  }\r\n\r\n  const remove = async (id: string) => {\r\n    await removeSupplier(id);\r\n    search();\r\n  }  \r\n\r\n  const addSupplier = () => {\r\n    history.push('/page/supplier/new');\r\n  }\r\n\r\n  const editSupplier = (id: string) => {\r\n    history.push('/page/supplier/' + id);\r\n  }\r\n\r\n  return (\r\n    <IonPage>\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <IonButtons slot=\"start\">\r\n            <IonMenuButton />\r\n          </IonButtons>\r\n          <IonTitle>{name}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent fullscreen>\r\n        <IonCard>\r\n          <IonTitle>Gestión de Proveedores</IonTitle>\r\n\r\n          <IonItem>\r\n            <IonButton onClick={addSupplier} color='primary' fill='solid' slot='end' size='default'>\r\n              Agregar Empleado\r\n              <IonIcon icon={add}></IonIcon>\r\n            </IonButton>\r\n          </IonItem>\r\n\r\n          <IonGrid className=\"table\">\r\n            <IonRow >\r\n              <IonCol>Nombre</IonCol>\r\n              <IonCol>Email</IonCol>\r\n              <IonCol>Télefono</IonCol>\r\n              <IonCol>Web</IonCol>\r\n              <IonCol>Acciones</IonCol>\r\n            </IonRow>\r\n            {proveedores.map((proveedor: Supplier) =>\r\n              <IonRow>\r\n                <IonCol>{proveedor.name}</IonCol>\r\n                <IonCol>{proveedor.email}</IonCol>\r\n                <IonCol>{proveedor.phone}</IonCol>\r\n                <IonCol>{proveedor.web}</IonCol>\r\n                <IonCol>\r\n                  <IonButton color='primary' fill='clear' onClick={() => editSupplier(String(proveedor.id))}>\r\n                    <IonIcon icon={pencil} slot=\"icon-only\" />\r\n                  </IonButton>\r\n\r\n                  <IonButton color='danger' fill='clear' onClick={() => remove(String(proveedor.id))}>\r\n                    <IonIcon icon={close} slot=\"icon-only\" />\r\n                  </IonButton>\r\n                </IonCol>\r\n              </IonRow>\r\n            )}\r\n\r\n          </IonGrid>\r\n        </IonCard>        \r\n\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default SupplierList;","import { IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonInput, IonItem, IonLabel, IonMenuButton, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { add, checkmark, close, pencil, text } from 'ionicons/icons';\r\nimport { useEffect, useState } from 'react';\r\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\r\nimport './../Page.css';\r\nimport Supplier from './Supplier';\r\nimport { removeSupplier, saveSupplier, searchSupplierById, searchSuppliers } from './SupplierApi';\r\n\r\nconst SupplierEdit: React.FC = () => {\r\n\r\n    const { name } = useParams<{ name: string;}>();\r\n    const [supplier, setSupplier] = useState<Supplier>({});\r\n    const history = useHistory();\r\n\r\n    const routeMatch: any = useRouteMatch(\"/page/supplier/:id\");\r\n    const id = routeMatch?.params?.id;\r\n\r\n    useEffect(() => {\r\n        search();\r\n    }, [history.location.pathname])\r\n\r\n    const search = async () => {   \r\n        if(id === 'new'){\r\n            setSupplier({});\r\n        } else {\r\n            let result = await searchSupplierById(id);\r\n            setSupplier(result);\r\n        }\r\n    }\r\n\r\n    const save = async () => {        \r\n        await saveSupplier(supplier);\r\n        history.push('/page/suppliers');\r\n    }\r\n\r\n\r\n    return (\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonMenuButton />\r\n                    </IonButtons>\r\n                    <IonTitle>{name}</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent fullscreen>\r\n                <IonCard>\r\n                    <IonTitle>{id === 'new' ? 'Agregar Empleado' : 'Editar Empleado'}</IonTitle>\r\n\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Nombre</IonLabel>\r\n                                <IonInput onIonChange={e => supplier.name = String(e.detail.value)} \r\n                                value={supplier.name}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Contacto</IonLabel>\r\n                                <IonInput onIonChange={e => supplier.contact = String(e.detail.value)} \r\n                                value={supplier.contact}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                    </IonRow>\r\n\r\n                    <IonRow>\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Email</IonLabel>\r\n                                <IonInput onIonChange={e => supplier.email = String(e.detail.value)} \r\n                                value={supplier.email}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n\r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Dirección</IonLabel>\r\n                                <IonInput onIonChange={e => supplier.address = String(e.detail.value)} \r\n                                value={supplier.address}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>                        \r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Teléfono</IonLabel>\r\n                                <IonInput onIonChange={e => supplier.phone = String(e.detail.value)} \r\n                                value={supplier.phone}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>                        \r\n                        <IonCol>\r\n                            <IonItem>\r\n                                <IonLabel position=\"stacked\">Web</IonLabel>\r\n                                <IonInput onIonChange={e => supplier.web = String(e.detail.value)} \r\n                                value={supplier.web}> </IonInput>\r\n                            </IonItem>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n\r\n                    <IonItem>\r\n                        <IonButton onClick={save} color='success' fill='solid' slot='end' size='default'>\r\n                            <IonIcon icon={checkmark}>\r\n                            </IonIcon>\r\n                            Guardar\r\n                        </IonButton>\r\n                    </IonItem>\r\n\r\n                </IonCard>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default SupplierEdit;","import { IonApp, IonRouterOutlet, IonSplitPane, setupIonicReact } from '@ionic/react';\nimport { IonReactHashRouter, IonReactRouter } from '@ionic/react-router';\nimport { Redirect, Route } from 'react-router-dom';\nimport Menu from './components/Menu';\nimport Page from './pages/Page';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport CustomerList from './pages/customer/CustomerList';\nimport CustomerEdit from './pages/customer/CustomerEdit';\nimport EmployeeList from './pages/employee/EmployeeList';\nimport EmployeeEdit from './pages/employee/EmployeeEdit';\nimport SupplierList from './pages/supplier/SupplierList';\nimport SupplierEdit from './pages/supplier/SupplierEdit';\n\nsetupIonicReact();\n\nconst App: React.FC = () => {\n  return (\n    <IonApp>\n      <IonReactHashRouter>\n        <IonSplitPane contentId=\"main\">\n          <Menu />\n          <IonRouterOutlet id=\"main\">\n            <Route path=\"/\" exact={true}>\n              <Redirect to=\"/page/customers\" />\n            </Route>\n            \n            <Route path=\"/page/:name\" exact={true}>\n              <Page />\n            </Route>\n            <Route path=\"/page/customers\" exact={true} >\n              <CustomerList />   \n            </Route>\n            <Route path=\"/page/customer/:id\" exact={true} >\n              <CustomerEdit />\n            </Route>\n\n            <Route path=\"/page/employees\" exact={true} >\n              <EmployeeList />   \n            </Route>\n            <Route path=\"/page/employee/:id\" exact={true} >\n              <EmployeeEdit />\n            </Route>\n\n            <Route path=\"/page/suppliers\" exact={true} >\n              <SupplierList />\n            </Route>\n            <Route path=\"/page/supplier/:id\" exact={true} >\n              <SupplierEdit />\n            </Route>\n\n          </IonRouterOutlet>\n        </IonSplitPane>\n      </IonReactHashRouter>\n    </IonApp>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}